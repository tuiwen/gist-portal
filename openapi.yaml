openapi: "3.0.0"
info: 
  title: A Gist Portal
  version: 0.1.0
  description: A portal that can be used to manage one's gists on Github.

paths:
  /ping:
    get:
      summary: Respond with a server up-time
      responses:
        '200':
          description: |-
            200 response
          content:
            application/json:
              example:
                uptime: 6.723
  /gists:
    get:
      summary: List all gists of the user.
      responses:
        '200':
          description: A list of all gists of the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/gist'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - basicAuth: []
    post:
      summary: Create a new gist.
      requestBody:
        description: Data required for creating the gist.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: A descriptive name for this gist.
                public:
                  type: boolean
                  description: Whether the gist will be public or not.
                  default: false
                files:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      content:
                        type: string
      responses:
        '201':
          description: The gist has been created.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gist'
        '400':
          description: Error message returned from Github
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      security:
      - basicAuth: []
  /gists/{id}:
    get:
      summary: Get a gist by ID.
      parameters:
      - name: id
        in: path
        description: gist ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Get the gist successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gist'
        '400':
          description: Error message returned from Github
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Resources not found.
      security:
      - basicAuth: []
    patch:
      summary: Update a gist by ID.
      parameters:
      - name: id
        in: path
        description: gist ID
        required: true
        schema:
          type: string
      requestBody:
        description: Data for updating the gist.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
                  description: A descriptive name for this gist.
                files:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      content:
                        type: string
                        description: The updated content of the file.
                      filename:
                        type: string
                        description: The new name for this file. Set to null to delete the file.
      responses:
        '200':
          description: Updated the gist successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/gist'
        '400':
          description: Error message returned from Github
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Resources not found.
      security:
      - basicAuth: []

components:
  schemas:
    gist:
      type: object
      properties:
        'id':
          type: string
        'description':
          type: string
        'public':
          type: boolean
        'truncated':
          type: boolean
        'created_at':
          type: string
          format: date-time
        'updated_at':
          type: string
          format: date-time
        'files':
          type: object
          additionalProperties:
            type: object
            properties:
              'filename':
                type: string
              'type':
                type: string
              'language':
                type: string
              'raw_url':
                type: string
              'size':
                type: integer
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
